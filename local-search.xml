<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>wls2 设置代理</title>
    <link href="/posts/e8fb0216.html"/>
    <url>/posts/e8fb0216.html</url>
    
    <content type="html"><![CDATA[<p>获取 wls2 网关</p><div class="code-wrapper"><pre class="language-sh" data-language="sh"><code class="language-sh">cat &#x2F;etc&#x2F;resolv.conf</code></pre></div><p>输出</p><div class="code-wrapper"><pre class="language-none"><code class="language-none"># This file was automatically generated by WSL. To stop automatic generation of this file, add the following entry to &#x2F;etc&#x2F;wsl.conf:# [network]# generateResolvConf &#x3D; falsenameserver 172.31.144.1</code></pre></div><p>或</p><div class="code-wrapper"><pre class="language-sh" data-language="sh"><code class="language-sh">cat &#x2F;etc&#x2F;resolv.conf |grep nameserver |cut -d &quot; &quot; -f 2</code></pre></div><p>输出</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">172.31.144.1</code></pre></div><p>bash 设置代理</p><div class="code-wrapper"><pre class="language-sh" data-language="sh"><code class="language-sh">export ALL_PROXY&#x3D;&quot;http:&#x2F;&#x2F;172.31.144.1:10809&quot;</code></pre></div><p>vscode 设置</p><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/vscode_proxy.png"></p><p>使用 bash 脚本管理</p><p>创建 <code>proxy-manager.sh</code> 文件</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token comment">#设置使用 windows 代理</span><span class="token comment">###############</span><span class="token assign-left variable">hostip</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /etc/resolv.conf <span class="token operator">|</span><span class="token function">grep</span> nameserver <span class="token operator">|</span><span class="token function">cut</span> -d <span class="token string">" "</span> -f <span class="token number">2</span><span class="token variable">)</span></span><span class="token assign-left variable">wslip</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">hostname</span> -I <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $1&#125;'</span><span class="token variable">)</span></span><span class="token comment"># windows 代理服务端口号</span><span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">10809</span><span class="token assign-left variable">PROXY_HTTP</span><span class="token operator">=</span><span class="token string">"http://<span class="token variable">$&#123;hostip&#125;</span>:<span class="token variable">$&#123;port&#125;</span>"</span><span class="token function-name function">set_proxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token builtin class-name">export</span> <span class="token assign-left variable">ALL_PROXY</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;PROXY_HTTP&#125;</span>"</span><span class="token punctuation">&#125;</span><span class="token function-name function">get_help</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token builtin class-name">echo</span> -e <span class="token string">"These are common Proxy commands used in various situations:<span class="token entity" title="\n">\n</span>"</span>     <span class="token builtin class-name">echo</span> <span class="token string">"help    show this help info"</span>     <span class="token builtin class-name">echo</span> <span class="token string">"set     set proxy"</span>     <span class="token builtin class-name">echo</span> <span class="token string">"unset   unset current proxy"</span>     <span class="token builtin class-name">echo</span> <span class="token string">"status  show current proxy information"</span><span class="token punctuation">&#125;</span><span class="token function-name function">unset_proxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token builtin class-name">unset</span> ALL_PROXY<span class="token punctuation">&#125;</span><span class="token function-name function">test_setting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Host IP:"</span> <span class="token variable">$&#123;hostip&#125;</span>    <span class="token builtin class-name">echo</span> <span class="token string">"WSL2 IP:"</span> <span class="token variable">$&#123;wslip&#125;</span>    <span class="token builtin class-name">echo</span> <span class="token string">"当前代理:"</span> <span class="token variable">$ALL_PROXY</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span> <span class="token string">"set"</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    set_proxy<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span> <span class="token string">"unset"</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    unset_proxy<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span> <span class="token string">"status"</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    test_setting<span class="token keyword">else</span>    get_help<span class="token keyword">fi</span></code></pre></div><p>设置脚本可执行权限</p><div class="code-wrapper"><pre class="language-sh" data-language="sh"><code class="language-sh">chmod u+x proxy-manager.sh</code></pre></div><p>创建 alias </p><div class="code-wrapper"><pre class="language-sh" data-language="sh"><code class="language-sh">vim ~&#x2F;.bashrc</code></pre></div><p>添加</p><div class="code-wrapper"><pre class="language-sh" data-language="sh"><code class="language-sh">alias proxy&#x3D;&quot;source &#x2F;path&#x2F;to&#x2F;proxy-manager.sh&quot;</code></pre></div><p>保存后记得<code>source ~/.bashrc</code>。至此即可使用 <code>proxy</code> 命令管理 wls2 中的代理</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">$ proxyThese are common Proxy commands used in various situations:help    show this help infoset     set proxyunset   unset current proxystatus  show current proxy information</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>wls2</tag>
      
      <tag>windows</tag>
      
      <tag>proxy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue3成为新的默认版本</title>
    <link href="/posts/548ed134.html"/>
    <url>/posts/548ed134.html</url>
    
    <content type="html"><![CDATA[<p>Vue 3 将在今天（2022 年 2 月 7 日）成为新的默认版本 <a href="https://gist.github.com/yyx990803/bf9a625eeff8b471bf0701afb8e3fe75">Link</a></p><html><script src="https://gist.github.com/geehon/386a27fd9b686f7b4a5cf60d4ec624b1.js"></script></html>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Go 项目中引用 GitHub 私有仓库</title>
    <link href="/posts/e77ae499.html"/>
    <url>/posts/e77ae499.html</url>
    
    <content type="html"><![CDATA[<h2 id="1-先在私有仓库发布版本"><a href="#1-先在私有仓库发布版本" class="headerlink" title="1. 先在私有仓库发布版本"></a>1. 先在私有仓库发布版本</h2><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/golang_release_private.png"></p><h2 id="2-设置-GOPRIVATE"><a href="#2-设置-GOPRIVATE" class="headerlink" title="2. 设置 GOPRIVATE"></a>2. 设置 <code>GOPRIVATE</code></h2><p>Go Module 的代理站点默认的 repo 是 <a href="https://proxy.golang.org/,direct">https://proxy.golang.org/,direct</a> ，由于我们的模块发布在 github 上，所以我们需要提供一种机制来绕过代理站点的私有仓库，这里可以使用 <code>GOPRIVATE</code> 来实现，<code>GOPRIVATE</code> 环境变量用来表示不对外公开的模块路径。</p><p>在开发环境中我们可以按照如下命令设置<code>GOPRIVATE</code>，多个值用逗号隔开。下面设置的是我的账户级别，也可以设置成仓库级别，比如 github.com&#x2F;geehon&#x2F;common-module。</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">go <span class="token function">env</span> -w <span class="token assign-left variable">GOPRIVATE</span><span class="token operator">=</span>github.com/geehon</code></pre></div><h2 id="3-在构建过程中传递仓库凭证"><a href="#3-在构建过程中传递仓库凭证" class="headerlink" title="3. 在构建过程中传递仓库凭证"></a>3. 在构建过程中传递仓库凭证</h2><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/golang_doc_git_https.png"><br>按照上图文档说明在 <code>~/.gitconfig</code> 文件添加下面这段内容</p><div class="code-wrapper"><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>url "ssh<span class="token punctuation">:</span>//git@github.com/"<span class="token punctuation">]</span>    insteadOf = https<span class="token punctuation">:</span>//github.com/</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vscode 配置 Xdebug 调试</title>
    <link href="/posts/bfca83d6.html"/>
    <url>/posts/bfca83d6.html</url>
    
    <content type="html"><![CDATA[<h2 id="安装-Xdebug-扩展"><a href="#安装-Xdebug-扩展" class="headerlink" title="安装 Xdebug 扩展"></a>安装 Xdebug 扩展</h2><p>首先到 Xdebug 的官网下载页面 <a href="https://xdebug.org/download">https://xdebug.org/download</a> 下载对应 php 版本的 Xdebug 扩展。将其放入 php 目录下的 <code>ext</code> 文件夹中。例如：原本的 php 是放在 <code>D:\php\php74</code> 中, Xdebug 扩展文件就放在 <code>D:\php\php74\ext</code> 目录下。</p><p>然后在配置文件 <code>php.ini</code> 末尾添加如下几项配置：</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">zend_extension &#x3D; php_xdebug-3.0.4-7.4-vc15-x86_64.dllxdebug.mode &#x3D; coverage,debug,developxdebug.client_host&#x3D;127.0.0.1xdebug.client_port &#x3D; 9003xdebug.start_with_request &#x3D; yesxdebug.log&#x3D;&quot;D:\\php\\php74\\xdebug_log\\xdebug.log&quot;</code></pre></div><h3 id="配置简要说明"><a href="#配置简要说明" class="headerlink" title="配置简要说明"></a>配置简要说明</h3><table><thead><tr><th>配置项</th><th>备注</th></tr></thead><tbody><tr><td>zend_extension</td><td>扩展文件存放的路径</td></tr><tr><td>xdebug.mode</td><td>开启 Xdebug 的模式，可以同时设置多个值</td></tr><tr><td>xdebug.log</td><td>日志文件输出位置</td></tr></tbody></table><p>具体的配置详情见官网说明 <a href="https://xdebug.org/docs/install#mode">https://xdebug.org/docs/install#mode</a></p><h2 id="vscode-配置"><a href="#vscode-配置" class="headerlink" title="vscode 配置"></a>vscode 配置</h2><h3 id="安装-vscode-扩展"><a href="#安装-vscode-扩展" class="headerlink" title="安装 vscode 扩展"></a>安装 vscode 扩展</h3><p>按 <code>F1</code> 然后输入 <code>ext install php-debug</code> 进行安装。或者在扩展商店里搜索 <code>php-debug</code> 进行安装。</p><h3 id="设置调试相关配置"><a href="#设置调试相关配置" class="headerlink" title="设置调试相关配置"></a>设置调试相关配置</h3><p>在项目的根目录下创建 vscode 的调试配置文件 <code>.vscode/launch.json</code>。</p><div class="code-wrapper"><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token comment">// 使用 IntelliSense 了解相关属性。</span>    <span class="token comment">// 悬停以查看现有属性的描述。</span>    <span class="token comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"configurations"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Listen for Xdebug"</span><span class="token punctuation">,</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"php"</span><span class="token punctuation">,</span>            <span class="token property">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>            <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">9003</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Launch Built-in web server"</span><span class="token punctuation">,</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"php"</span><span class="token punctuation">,</span>            <span class="token property">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>            <span class="token property">"runtimeArgs"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"-dxdebug.mode=debug,develop"</span><span class="token punctuation">,</span>                <span class="token string">"-dxdebug.start_with_request=yes"</span><span class="token punctuation">,</span>                <span class="token string">"-S"</span><span class="token punctuation">,</span>                <span class="token string">"localhost:8080"</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"program"</span><span class="token operator">:</span> <span class="token string">"$&#123;workspaceFolder&#125;\\public\\index.php"</span><span class="token punctuation">,</span>            <span class="token property">"cwd"</span><span class="token operator">:</span> <span class="token string">"$&#123;workspaceRoot&#125;"</span><span class="token punctuation">,</span>            <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">9003</span><span class="token punctuation">,</span>            <span class="token property">"serverReadyAction"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"pattern"</span><span class="token operator">:</span> <span class="token string">"Development Server \\(http://localhost:([0-9]+)\\) started"</span><span class="token punctuation">,</span>                <span class="token property">"uriFormat"</span><span class="token operator">:</span> <span class="token string">"http://localhost:%s"</span><span class="token punctuation">,</span>                <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"openExternally"</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre></div><h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><p>上面是配置了两个的 debug 模式。<code>name</code> 字段是配置名称。名称为 <code>Listen for Xdebug</code> 是默认使用 <code>php.ini</code> 里设置的模式进行调试。<code>Launch Built-in web server</code> 这个配置中可以看到在 <code>runtimeArgs</code> 字段里传入了 debug 的模式等配置。并且通过 <code>-S</code> 命令在本地的 8080 端口开启 php 内置服务器。<code>program</code> 字段是指定程序的入口文件。<code>serverReadyAction</code> 字段是指定开启服务后的动作。示例配置是直接在浏览器打开。更多详细说明参考官方的说明 <a href="https://github.com/xdebug/vscode-php-debug#supported-launchjson-settings">https://github.com/xdebug/vscode-php-debug#supported-launchjson-settings</a></p>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vscode</tag>
      
      <tag>Xdebug</tag>
      
      <tag>php</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Swap分区设置</title>
    <link href="/posts/396b749b.html"/>
    <url>/posts/396b749b.html</url>
    
    <content type="html"><![CDATA[<h2 id="一、Swap-分区介绍"><a href="#一、Swap-分区介绍" class="headerlink" title="一、Swap 分区介绍"></a>一、Swap 分区介绍</h2><p>Swap 分区是什么？Linux 中 Swap，类似于 Windows 的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用，从而解决内存容量不足的情况。</p><p>Swap 分区的作用是什么？它的功能就是在内存不够的情况下，操作系统先把内存中暂时不用的数据，存到硬盘的交换空间，腾出内存来让别的程序运行</p><h2 id="二、创建-Swap-分区步骤"><a href="#二、创建-Swap-分区步骤" class="headerlink" title="二、创建 Swap 分区步骤"></a>二、创建 Swap 分区步骤</h2><p>我们可以用以下命令查看</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">free</span> -m</code></pre></div><p>如下图所示，Mem 表示内存大小（ram），Swap 则表示交换分区大小：</p><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/swap_1.png"></p><p>如果我们 Swap 分区设置的不合理（太小），并且VPS本身的物理内存也不够用，那么就会出现 Linux Swap 占用很高，甚至 Swap 分区全部占满的情况，一般来说，根据 Linux 内存的大小不同，我们可以按照下面的对应关系设置：</p><ol><li>创建一个空文件。</li></ol><p>其中<code>/swapfile</code>是文件位置，<code>bs*count</code>是文件大小，例如以下命令就会创建一个1G的文件：</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">dd</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>/dev/zero <span class="token assign-left variable">of</span><span class="token operator">=</span>/swapfile <span class="token assign-left variable">bs</span><span class="token operator">=</span>1M <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">1024</span></code></pre></div><ol start="2"><li>把文件设置为交换区</li></ol><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkswap</span> /swapfile</code></pre></div><ol start="3"><li>启用Swap分区</li></ol><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">swapon</span> /swapfile</code></pre></div><p class="note note-warning">如果提示 insecure permissions 0644, 0600 suggested. 要设置该文件的权限为600</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">600</span> /swapfile</code></pre></div><p>再次查看 <code>free -m</code>此时分配好的 Swap 已经启用了</p><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/swap_2.png"></p><ol start="4"><li>设置系统启动时自动开启 Swap</li></ol><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/fstab</code></pre></div><p>在 fstab 文件最后一行添加下面的内容</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">&#x2F;swapfile none swap sw 0 0</code></pre></div><ol start="5"><li>卸载 Swap</li></ol><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">swapoff /swapfile</code></pre></div><ol start="6"><li>设置 swappiness 的值</li></ol><p>swappiness 的值的大小对如何使用 Swap 分区是有着很大的联系的。swappiness&#x3D;0 的时候表示最大限度使用物理内存，然后才是 Swap空间，swappiness＝100 的时候表示积极的使用 Swap 分区，并且把内存上的数据及时的搬运到 Swap 空间里面。</p><p>查看 swappiness</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /proc/sys/vm/swappiness</code></pre></div><p>临时修改</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">sysctl vm.swappiness<span class="token operator">=</span><span class="token number">10</span></code></pre></div><p>永久修改</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/sysctl.conf</code></pre></div><p>添加<code> vm.swappiness=10</code> 然后保存就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>system</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一款 phpstorm markdown 主题</title>
    <link href="/posts/22a8a2ac.html"/>
    <url>/posts/22a8a2ac.html</url>
    
    <content type="html"><![CDATA[<p>phpstorm 的 markdown 插件渲染的效果不符合我的需求故做了一下修改。使用方式是直接修改插件的默认样式。打开 <code>Languages &amp; Frameworks</code> -&gt; <code>Markdown</code> 找到<br><code>Add CSS rules</code> 填入下面的 CSS 样式。</p><p>部分样式预览</p><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/phpstorm-markdown.png"></p><p class="note note-secondary">style 标签仅仅为了代码高亮</p><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token comment">/* 从下面这行开始复制 */</span><span class="token selector">body</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Helvetica<span class="token punctuation">,</span> <span class="token string">"微软雅黑"</span><span class="token punctuation">,</span> arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 1.6<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body > *:first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body > *:last-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span> <span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #4183C4<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a.absent</span> <span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #cc0000<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a.anchor</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">padding-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> -30px<span class="token punctuation">;</span>  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1, h2, h3, h4, h5, h6</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0 10px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>  <span class="token property">cursor</span><span class="token punctuation">:</span> text<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor</span> <span class="token punctuation">&#123;</span>  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1 tt, h1 code</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h2 tt, h2 code</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h3 tt, h3 code</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h4 tt, h4 code</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h5 tt, h5 code</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h6 tt, h6 code</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h2</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #cccccc<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h3</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h4</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h5</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h6</span> <span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #777777<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">p, blockquote, ul, ol, dl, li, table, pre</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 5px 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">hr</span> <span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #D2D2D2<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body > h2:first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body > h1:first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body > h1:first-child + h2</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body > h3:first-child, body > h4:first-child, body > h5:first-child, body > h6:first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1 p, h2 p, h3 p, h4 p, h5 p, h6 p</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">li p.first</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">li</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">ul, ol</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">ul :first-child, ol :first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">dl</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">dl dt</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>  <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 15px 0 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">dl dt:first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">dl dt > :first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">dl dt > :last-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">dl dd</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 15px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">dl dd > :first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">dl dd > :last-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">blockquote</span> <span class="token punctuation">&#123;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> 4px solid #dddddd<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0 15px<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #777777<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">blockquote > :first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">blockquote > :last-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table tr</span> <span class="token punctuation">&#123;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #cccccc<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table tr:nth-child(2n)</span> <span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f8f8f8<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table tr th</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #cccccc<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 6px 13px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table tr td</span> <span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #cccccc<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 6px 13px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table tr th :first-child, table tr td :first-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table tr th :last-child, table tr td :last-child</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">img</span> <span class="token punctuation">&#123;</span>  <span class="token property">max-width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.frame</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.frame > span</span> <span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #dddddd<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 13px 0 0<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 7px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.frame span img</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.frame span span</span> <span class="token punctuation">&#123;</span>  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #333333<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 5px 0 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.align-center</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.align-center > span</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 13px auto 0<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.align-center span img</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.align-right</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.align-right > span</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 13px 0 0<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.align-right span img</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.float-left</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">margin-right</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.float-left span</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 13px 0 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.float-right</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">span.float-right > span</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 13px auto 0<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">code, tt</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0 2px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0 5px<span class="token punctuation">;</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #eaeaea<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f8f8f8<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">pre code</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> pre<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.highlight pre</span> <span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f8f8f8<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #cccccc<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 19px<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 6px 10px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">pre</span> <span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f8f8f8<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #cccccc<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 19px<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 6px 10px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">pre code, pre tt</span> <span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 914px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>  <span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 854px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">&#123;</span>  <span class="token selector">table, pre</span> <span class="token punctuation">&#123;</span>    <span class="token property">page-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">pre</span> <span class="token punctuation">&#123;</span>    <span class="token property">word-wrap</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 复制到上面这行 */</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PhPStorm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>爱奇艺签到小组件分享</title>
    <link href="/posts/abe97b01.html"/>
    <url>/posts/abe97b01.html</url>
    
    <content type="html"><![CDATA[<p>本着能不动手的都用软件去完成的宗旨，区区签到这种重复无聊的事情当然要写个小脚本让它自己去完成啦！！刚好看到 AppStore 上有个叫 Scriptable 的小组件应用，并且还是支持 JavaScript。那就在 serverless 平台上创建定时自动签到任务。用手机实时监控签到进度。嗯！白嫖的味道~ o(<em>￣▽￣</em>)o 真香！</p><p class="note note-success">Tips：按照本文创建小组件的思路可以做服务器监控。实时查阅更新订阅列表等等···</p><p>实现的效果：</p><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/iqy_widget.png"></p><h2 id="cloudflare-平台上创建-Workers-及Cron-触发器："><a href="#cloudflare-平台上创建-Workers-及Cron-触发器：" class="headerlink" title="cloudflare 平台上创建 Workers 及Cron 触发器："></a>cloudflare 平台上创建 Workers 及Cron 触发器：</h2><ol><li>workers 的代码：</li></ol><div class="code-wrapper"><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * Example someHost is set up to take in a JSON request * Replace url with the host you wish to send requests to * @param &#123;string&#125; yourCookieSubString the string called `P00001` Find In Cookie * @param &#123;string&#125; url the URL to send the request to */</span><span class="token keyword">const</span> yourCookieSubString <span class="token operator">=</span> stringFindInCookie<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">"https://tc.vip.iqiyi.com/taskCenter/task/userSign?P00001="</span>  <span class="token operator">+</span> yourCookieSubString   <span class="token operator">+</span> <span class="token string">"&amp;lang=zh_CN&amp;app_lm=cn&amp;deviceID=pcw-pc&amp;version=v2&amp;platform=Q.browser.iPhone"</span><span class="token comment">/** * gatherResponse awaits and returns a response body as a string. * Use await gatherResponse(..) in an async function to get the response body * @param &#123;Response&#125; response */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">gatherResponse</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> headers <span class="token punctuation">&#125;</span> <span class="token operator">=</span> response  <span class="token keyword">const</span> contentType <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"content-type"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>contentType<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"application/json"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>contentType<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"application/text"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>contentType<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"text/html"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> init <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string-property property">"content-type"</span><span class="token operator">:</span> <span class="token string">"application/json;charset=UTF-8"</span><span class="token punctuation">,</span>      <span class="token string-property property">"cookie"</span><span class="token operator">:</span><span class="token string">'you iqy cookie'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> init<span class="token punctuation">)</span>  <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">gatherResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'success'</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>results<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 监听小组件请求</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"fetch"</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span><span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 监听定时任务</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"scheduled"</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>scheduledTime<span class="token punctuation">)</span>  <span class="token keyword">return</span> event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span><span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre></div><ol start="2"><li>创建触发器</li></ol><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/iqyworker.jpg"></p><h2 id="手机-Scriptable-上创建小组件脚本"><a href="#手机-Scriptable-上创建小组件脚本" class="headerlink" title="手机 Scriptable 上创建小组件脚本"></a>手机 Scriptable 上创建小组件脚本</h2><div class="code-wrapper"><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">loadItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">"yourWorkersUrl"</span>  <span class="token keyword">let</span> req <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>  <span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token keyword">await</span> req<span class="token punctuation">.</span><span class="token function">loadJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// console.log(json)</span>  <span class="token keyword">return</span> json<span class="token punctuation">&#125;</span><span class="token keyword">let</span> getItem <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>runsInWidget<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> widget <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createWidget</span><span class="token punctuation">(</span>getItem<span class="token punctuation">)</span>  Script<span class="token punctuation">.</span><span class="token function">setWidget</span><span class="token punctuation">(</span>widget<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createWidget</span><span class="token punctuation">(</span><span class="token parameter">items</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> item <span class="token operator">=</span> items  <span class="token keyword">let</span> gradient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinearGradient</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  gradient<span class="token punctuation">.</span>locations <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>  gradient<span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token string">"#1c1c1c"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token string">"#29323c"</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span>  <span class="token keyword">let</span> widget <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    widget<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">dynamic</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token string">"b00202"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token string">"5a180f"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//widget.backgroundGradient = gradient</span>    <span class="token keyword">let</span> titleStack <span class="token operator">=</span> widget<span class="token punctuation">.</span><span class="token function">addStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> authorsElement <span class="token operator">=</span> titleStack<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token string">"爱奇艺会员"</span><span class="token punctuation">)</span>  authorsElement<span class="token punctuation">.</span>font <span class="token operator">=</span> Font<span class="token punctuation">.</span><span class="token function">mediumSystemFont</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span>  authorsElement<span class="token punctuation">.</span>textColor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  authorsElement<span class="token punctuation">.</span>textOpacity <span class="token operator">=</span> <span class="token number">0.9</span>  titleStack<span class="token punctuation">.</span><span class="token function">addSpacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> bodyStack <span class="token operator">=</span> widget<span class="token punctuation">.</span><span class="token function">addStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> titleElement<span class="token operator">=</span>bodyStack<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token string">"\n🏅🏅\n已签到"</span> <span class="token punctuation">)</span>  titleElement<span class="token punctuation">.</span>font<span class="token operator">=</span>Font<span class="token punctuation">.</span><span class="token function">mediumSystemFont</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>  titleElement<span class="token punctuation">.</span>textColor<span class="token operator">=</span>Color<span class="token punctuation">.</span><span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  titleElement<span class="token punctuation">.</span>textOpacity<span class="token operator">=</span><span class="token number">1</span>    <span class="token keyword">let</span> datesElement <span class="token operator">=</span> bodyStack<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>data<span class="token punctuation">.</span>continueSignDaysSum<span class="token punctuation">)</span>  datesElement<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">'AvenirNext-Bold'</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span>  datesElement<span class="token punctuation">.</span>textColor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">cyan</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  datesElement<span class="token punctuation">.</span>textOpacity <span class="token operator">=</span> <span class="token number">0.9</span>    <span class="token keyword">let</span> titleEl<span class="token operator">=</span>bodyStack<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token string">"\n🏃\n 天"</span> <span class="token punctuation">)</span>  titleEl<span class="token punctuation">.</span>font <span class="token operator">=</span> Font<span class="token punctuation">.</span><span class="token function">mediumSystemFont</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>  titleEl<span class="token punctuation">.</span>textColor<span class="token operator">=</span>Color<span class="token punctuation">.</span><span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  titleEl<span class="token punctuation">.</span>textOpacity<span class="token operator">=</span><span class="token number">1</span>    bodyStack<span class="token punctuation">.</span><span class="token function">addSpacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> footerStack <span class="token operator">=</span> widget<span class="token punctuation">.</span><span class="token function">addStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> dateFormatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DateFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  dateFormatter<span class="token punctuation">.</span><span class="token function">useMediumDateStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  dateFormatter<span class="token punctuation">.</span><span class="token function">useShortTimeStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> strDate <span class="token operator">=</span> dateFormatter<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span>    dateEle<span class="token operator">=</span>footerStack<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">+</span>strDate<span class="token punctuation">)</span>  dateEle<span class="token punctuation">.</span>font<span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">'SF Mono'</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span>  dateEle<span class="token punctuation">.</span>textColor<span class="token operator">=</span>Color<span class="token punctuation">.</span><span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  dateEle<span class="token punctuation">.</span>textOpacity<span class="token operator">=</span><span class="token number">0.9</span>  footerStack<span class="token punctuation">.</span><span class="token function">addSpacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> widget<span class="token punctuation">&#125;</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>serverless</tag>
      
      <tag>workers</tag>
      
      <tag>cloudflare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cloudflare Workers 初体验</title>
    <link href="/posts/75195c32.html"/>
    <url>/posts/75195c32.html</url>
    
    <content type="html"><![CDATA[<p>之前一直都关注 Cloudflare Workers 推出的 serverless 服务。但是一直没有动手去尝试一下。今天访问 Github 一直无法连上。突然想到了 Cloudflare 的 这个服务，看能不能解决当前的痛点。果然<strong>需求是学习的最大动力</strong>。</p><p>首先登录到 Cloudflare 的 dashboard <a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a>找到右侧的 Workers 服务。然后创建一个新的 Worker 应用。然后就是发挥你的才智创造啦！</p><p>通过阅读官方<a href="https://developers.cloudflare.com/workers/">文档</a>应该很快就能掌握 Workers 的使用。只要 js 过关的话应该很快就能掌握。我直接翻到 <a href="https://developers.cloudflare.com/workers/runtime-apis">Runtime APIs</a> 部分。大致了解了下官方提供的相关 API。可以说官方的文档还是挺不错的，基本上都有相应的 Demo 可以参照。</p><p>那么解决不能访问 Github 的问题的大致思路就是：</p><ol><li><p>添加一个事件监听本地客户端发送的请求</p></li><li><p>封装一个对请求的处理，先去 fetch Github 源站点获取内容然后返回给本地客户端结果</p></li></ol><p>添加一个事件监听的核心代码：</p><div class="code-wrapper"><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'fetch'</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span><span class="token function">reqHandler</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre></div><p>请求处理的核心代码：</p><div class="code-wrapper"><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> domain_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://your-workers-name.geehon.workers.dev'</span><span class="token punctuation">]</span><span class="token keyword">const</span> upstream <span class="token operator">=</span> <span class="token string">'https://www.github.com/'</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">reqHandler</span><span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> url <span class="token operator">=</span> request<span class="token punctuation">.</span>url<span class="token punctuation">;</span>    <span class="token keyword">const</span> method <span class="token operator">=</span> request<span class="token punctuation">.</span>method<span class="token punctuation">;</span>    <span class="token keyword">const</span> headers <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> domain <span class="token keyword">of</span> domain_list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        url <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>domain<span class="token punctuation">,</span> upstream<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>        <span class="token literal-property property">headers</span><span class="token operator">:</span> headers    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> response<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div><p>完整代码</p><div class="code-wrapper"><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// List of domains bind to your WorkersProxy.</span><span class="token keyword">const</span> domain_list <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token string">'https://your-workers-name.geehon.workers.dev'</span><span class="token punctuation">]</span><span class="token comment">// Website you intended to retrieve for users.</span><span class="token keyword">const</span> upstream <span class="token operator">=</span> <span class="token string">'https://www.github.com/'</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'fetch'</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span><span class="token function">reqHandler</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">reqHandler</span><span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> method <span class="token operator">=</span> request<span class="token punctuation">.</span>method<span class="token punctuation">;</span>    <span class="token keyword">const</span> headers <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>    <span class="token keyword">let</span> url <span class="token operator">=</span> request<span class="token punctuation">.</span>url<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> domain <span class="token keyword">of</span> domain_list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        url <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>domain<span class="token punctuation">,</span> upstream<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>        <span class="token literal-property property">headers</span><span class="token operator">:</span> headers    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> response<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div><p>想要添加 IP 过滤，客户端识别或者其他的请求处理直接添加到 <code>reqHandler</code> 函数里即可。</p><p class="note note-warning">声明：本文只介绍一种解决问题的思路，切勿用于非法用途。请勿滥用厂商的资源！</p>]]></content>
    
    
    <categories>
      
      <category>Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>serverless</tag>
      
      <tag>workers</tag>
      
      <tag>cloudflare</tag>
      
      <tag>镜像</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Node 环境变量设置</title>
    <link href="/posts/1f022d57.html"/>
    <url>/posts/1f022d57.html</url>
    
    <content type="html"><![CDATA[<p>通常情况下，我们需要针对不同环境（开发环境、集成环境、生产环境等），进行相应策略的打包（比如是否替换接口地址，代码是否压缩等）。</p><p>拿 Nodejs 打包工具来说，由于 Nodejs 打包工具运行在 Nodejs 环境中，要识别不同环境，就得配置 Nodejs 环境变量，并且把它当成判断不同环境的依据。</p><p>Nodejs 提供了 process.env API，它返回一个包含用户环境信息的对象。当我们给 Nodejs 设置一个环境变量，并且把它挂载在 process.env 返回的对象上，便可以在代码中进行相应的环境判断。</p><p>于是，在 Webpack 配置文件中，经常会看到类似的代码：</p><div class="code-wrapper"><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'production'</span> <span class="token operator">?</span> <span class="token string">'production'</span> <span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span></code></pre></div><p>要说明的是，NODE_ENV 这个名称只是开发社区的一种共识，名称内容是可以修改的。如果需要，你也可以把它定义为 NODE_XXX。</p><p>那么问题来了，如何设置 Nodejs 这个环境变量呢？总结下来，可通过以下几种方式。</p><h2 id="在-Webpack-配置文件直接赋值"><a href="#在-Webpack-配置文件直接赋值" class="headerlink" title="在 Webpack 配置文件直接赋值"></a>在 Webpack 配置文件直接赋值</h2><p>你只需要在 Webpack 打包配置文件中，直接给 process.env.NODE_ENV 赋值即可。不过，每次在不同环境下打包时，都要手动反复修改它的值。</p><div class="code-wrapper"><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// webpack.config.js</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">=</span> <span class="token string">'production'</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'production'</span> <span class="token operator">?</span> <span class="token string">'production'</span> <span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span></code></pre></div><h2 id="命令行（CLI）设置"><a href="#命令行（CLI）设置" class="headerlink" title="命令行（CLI）设置"></a>命令行（CLI）设置</h2><h3 id="Windows-系统"><a href="#Windows-系统" class="headerlink" title="Windows 系统"></a>Windows 系统</h3><p>Windows 系统下，最常用的命令行面板就是 CMD（Command的简写） 和 Powershell。它们的操作分别如下：</p><p>CMD (Command 或 命令提示符)</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看所有环境变量</span><span class="token builtin class-name">set</span><span class="token comment"># 查看单个环境变量（以 NODE_ENV 为例）</span><span class="token builtin class-name">set</span> NODE_ENV<span class="token comment"># 设置单个环境变量（以 NODE_ENV 为例）</span><span class="token builtin class-name">set</span> <span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production<span class="token comment"># 删除单个环境变量（以 NODE_ENV 为例）</span><span class="token builtin class-name">set</span> <span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span></code></pre></div><p>上面的命令行以 NODE_ENV 变量为例，在 CMD 命令面板的操作中，如果 NODE_ENV 没有设置，则通过 <code>set NODE_ENV</code> 命令查看时，会提示 环境变量 NODE_ENV 没有定义。</p><p>当设置完 NODE_ENV（假设设置值为 production），再通过 <code>set NODE_ENV</code> 命令查看时，会返回 NODE_ENV&#x3D;production。</p><p>Powershell</p><div class="code-wrapper"><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 查看所有环境变量</span><span class="token function">ls</span> env:<span class="token comment"># 查看单个环境变量（以 NODE_ENV 为例）</span><span class="token variable">$env</span>:NODE_ENV<span class="token comment"># 设置单个环境变量（以 NODE_ENV 为例）</span><span class="token variable">$env</span>:NODE_ENV=<span class="token string">"production"</span><span class="token comment"># 删除单个环境变量（以 NODE_ENV 为例）</span><span class="token function">del</span> env:NODE_ENV</code></pre></div><p>上面的命令行以 NODE_ENV 变量为例，在 Powershell 命令面板的操作中，若 NODE_ENV 没有设置，则通过 <code>set NODE_ENV</code> 命令查看它时，没有任何提示。</p><p>当设置完 NODE_ENV（假设设置值为 production），再通过 <code>set NODE_ENV</code> 命令查看它时，会返回 production。</p><p class="note note-warning">    注意点: 上面的环境设置只是临时的，即只针对当前运行窗口的环境有效。当CLI运行窗口关闭以后，相关设置都会丢失。</p><p>另外，虽然通过 CMD 和 Powershell 都能修改环境变量，但它们之间设置的环境变量并不会相互影响，即你在 CMD 可以设置 NODE_ENV 为 production，同时也可以在 Powershell 中设置 NODE_ENV 为 development，这也印证了上面的描述，设置只针对当前运行窗口有效 。</p><p>如果你希望设置一直生效（即 本地设置），可通过 控制面板 -&gt; 系统和安全 -&gt; 系统 -&gt; 高级系统设置 -&gt; 高级 -&gt; 环境变量 这样进行设置（Windows10、可能需要重启）。</p><h3 id="Mac-系统"><a href="#Mac-系统" class="headerlink" title="Mac 系统"></a>Mac 系统</h3><p>相当于 Windows 系统，Mac 系统上的操作就轻松了不少。因为它只集成一种命令行终端，它设置 Nodejs 环境变量的语法如下：</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看所有环境变量</span><span class="token function">env</span><span class="token comment"># 查看单个环境变量（以 NODE_ENV 为例）</span><span class="token builtin class-name">echo</span> <span class="token variable">$NODE_ENV</span><span class="token comment"># 设置单个环境变量（以 NODE_ENV 为例）</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production<span class="token comment"># 删除单个环境变量（以 NODE_ENV 为例）</span><span class="token builtin class-name">unset</span> NODE_ENV</code></pre></div><p>在配置完 Nodejs 环境变量后，你就可以继续运行项目中的打包命令了。</p><h2 id="配置-package-json"><a href="#配置-package-json" class="headerlink" title="配置 package.json"></a>配置 package.json</h2><p>在项目配置文件 package.json 中，根据不同的打包命令去设置相应的 Nodejs 环境变量，是一种非常主流的做法。其实本质上来说，只是将在命令行面板设置环境变量的命令语句放到了 package.json 文件中，把 设置环境变量 和 打包 两个命令合并运行而已。这种方式，就是将 NODE_ENV 注入到 process.env 对象。不同环境下，设置如下：</p><h3 id="Windows-系统-1"><a href="#Windows-系统-1" class="headerlink" title="Windows 系统"></a>Windows 系统</h3><p>在这种方式下，无论你是使用 CMD (命令提示符) 还是 Powershell 命令行工具，你都可以在 package.json 这样配置：</p><div class="code-wrapper"><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  ...  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"set NODE_ENV=production&amp;&amp; npm run clean &amp;&amp; webpack"</span><span class="token punctuation">,</span>    <span class="token property">"clean"</span><span class="token operator">:</span> <span class="token string">"rimraf ./build &amp;&amp; mkdirp build"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre></div><p>配置完后（mkdirp 是一个生成文件夹的第三方包），你只需要在命令行面板运行 npm run build 即可完成打包。</p><p class="note note-warning">    注意点: 在 Windows 系统中，你必须移除环境变量命令与 && 符号之间的空白。否者，配置的命令不能生效！</p><h3 id="Mac-系统-1"><a href="#Mac-系统-1" class="headerlink" title="Mac 系统"></a>Mac 系统</h3><div class="code-wrapper"><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  ...  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"export NODE_ENV=production &amp;&amp; npm run clean &amp;&amp; webpack"</span><span class="token punctuation">,</span>    <span class="token property">"clean"</span><span class="token operator">:</span> <span class="token string">"rimraf ./build &amp;&amp; mkdirp build"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre></div><p>从上面描述可以看到，不论是不同的操作系统，还是不同的命令行终端，虽然目的都是设置 Nodejs 环境变量，但它们的语法都不尽相同。这就带来两个问题：</p><ul><li>在 Windows 开发部署的项目，可能在 Mac 系统无法正常打包</li><li>在跨平台开发的项目上，你还得记住每个命令行终端所使用的语法，也麻烦</li></ul><p>为了解决这一问题，有人开发了 cross-env。</p><h3 id="跨平台-cross-env"><a href="#跨平台-cross-env" class="headerlink" title="跨平台 - cross-env"></a>跨平台 - cross-env</h3><p><a href="https://www.npmjs.com/package/cross-env">cross-env</a> 是一个跨平台设置环境变量的第三方包，它可以让你只配置一行命令，就能轻松地在多个平台设置环境变量。</p><p>首先，你只需要安装它（由于多个项目在用，所以就全局安装了）：</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cross-env</code></pre></div><p>然后，在 package.json 文件中进行设置：</p><div class="code-wrapper"><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  ...  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"npm run clean &amp;&amp; cross-env NODE_ENV=production webpack"</span><span class="token punctuation">,</span>    <span class="token property">"clean"</span><span class="token operator">:</span> <span class="token string">"rimraf ./build &amp;&amp; mkdirp build"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre></div><p>这样，不管你的电脑是 Windows 系统还是 Mac 系统 ，不管你用的 Powershell 还是 Git，你都可以正常设置 Nodejs 环境变量了。</p><p class="note note-warning">    注意点: cross-env NODE_ENV=production && npm run clean && webpack 此类的设置不能使环境变量生效。原因是 && 符号把命令语句分离成了多个，每一个命令执行的环境都是隔离的，而 cross-env 无法作用于其他环境的命令。</p><p>转载自 <a href="https://yi-jy.com/2018/08/08/node-env/">https://yi-jy.com/2018/08/08/node-env/</a></p>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决 Ubuntu 无线频繁断网</title>
    <link href="/posts/655c8dfc.html"/>
    <url>/posts/655c8dfc.html</url>
    
    <content type="html"><![CDATA[<p>最近把手上的一台就笔电重装了代号为 Focal Fossa 的 Ubuntu 。但是无线网络总是频繁断网。经过一番排查，最终找到了故障原因，这边做下总结。</p><h2 id="故障原因"><a href="#故障原因" class="headerlink" title="故障原因"></a>故障原因</h2><p>WiFi 的 power management 处于打开状态</p><h2 id="使用-iwconfig-查看"><a href="#使用-iwconfig-查看" class="headerlink" title="使用 iwconfig 查看"></a>使用 iwconfig 查看</h2><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">iwconfig</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/wifi.png"></p><p>如图所示若看到：</p><blockquote><p>Power Management:on</p></blockquote><p>将此关闭：</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> iwconfig  wlp3s0 power off</code></pre></div><p>命令中的  <code>wlp3s0</code> 是图中要设置网卡的对应名称。</p><p>关闭后再次查看wifi状态</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">iwconfig</code></pre></div><p>可以看到此时 Power Management 这项信息已经为off状态了（图略）。</p><h2 id="永久关闭-Power-Management"><a href="#永久关闭-Power-Management" class="headerlink" title="永久关闭 Power Management"></a>永久关闭 Power Management</h2><p>上面操作只能临时关闭。重启之后会再次被设为on。一劳永逸做法是通过修改默认设置。</p><p>查看默认设置</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf</code></pre></div><p>此时默认为3，即开机默认设置为on</p><blockquote><p>wifi.powersave &#x3D; 3</p></blockquote><p>把它修改为2即可</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf</code></pre></div><p>修改完成保存重启就默认是off状态</p>]]></content>
    
    
    <categories>
      
      <category>Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 创建 SSL 证书</title>
    <link href="/posts/c3951c33.html"/>
    <url>/posts/c3951c33.html</url>
    
    <content type="html"><![CDATA[<p>创建配置文件 <code>openssl-temp.cnf</code></p><div class="code-wrapper"><pre class="language-none"><code class="language-none">[req]distinguished_name &#x3D; req_distinguished_namex509_extensions &#x3D; v3_reqprompt &#x3D; no[req_distinguished_name]C &#x3D; USST &#x3D; VAL &#x3D; SomeCityO &#x3D; MyCompanyOU &#x3D; MyDivisionCN &#x3D; test.geehon.top[v3_req]keyUsage &#x3D; critical, digitalSignature, keyAgreementextendedKeyUsage &#x3D; serverAuthsubjectAltName &#x3D; @alt_names[alt_names]DNS.1 &#x3D; test.geehon.top</code></pre></div><p>在配置文件的同级目录下运行如下命令创建证书</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">openssl req -x509 -nodes -days 3650 \-newkey rsa:2048 -config .&#x2F;openssl-temp.cnf \-keyout server.key -out server.crt</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/pic.png" alt="运行结果"></p><p>Windows edge 浏览器导入刚刚创建的证书</p><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/win1.png"></p><p>根据证书导入向导安装</p><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/win2.png"></p><p>重启浏览器，打开本地配置好该 SSL 证书的网站（要事先设置好 host）</p><p><img src="https://cdn.jsdelivr.net/gh/geehon/blogImgBed/img/win3.png"></p>]]></content>
    
    
    <categories>
      
      <category>Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu使用使用V2ray容器</title>
    <link href="/posts/7c5a1286.html"/>
    <url>/posts/7c5a1286.html</url>
    
    <content type="html"><![CDATA[<p>关于如何在 Ubuntu 下使用 V2ray 官方容器的详细内容移步我的项目 <a href="https://github.com/geehon/docker-v2ray">geehon&#x2F;docker-v2ray</a></p>]]></content>
    
    
    <categories>
      
      <category>Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>容器</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker基于官方镜像构建PHP+Nginx环境</title>
    <link href="/posts/6a467cce.html"/>
    <url>/posts/6a467cce.html</url>
    
    <content type="html"><![CDATA[<p>拉取 PHP 镜像</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> pull php:7.4-fpm</code></pre></div><p>新建容器并运行</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> run --rm -it --name containerName php:7.4-fpm /bin/bash</code></pre></div><p>在容器里安装扩展</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">docker-php-ext-install mysqli </code></pre></div><p>安装zip unzip</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">zip</span> <span class="token function">unzip</span></code></pre></div><p>拉取最新 Nginx 镜像</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> pull nginx</code></pre></div><p>运行 Nginx</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> run  --rm -it --name nginx-test -p <span class="token number">8080</span>:80 -d nginx</code></pre></div><blockquote><p>8080端口为宿主机端口</p><p>80端口为docker里nginx映射出来的</p><p>所以访问地址为<code>http://宿主机ip:8080</code></p></blockquote><p>项目文件结构</p><div class="code-wrapper"><pre class="language-reStructuredText" data-language="reStructuredText"><code class="language-reStructuredText">└--nginx|   └--conf.d|    └--default.conf└--www</code></pre></div><p>default.conf 文件内容：</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">server &#123;    listen       80;    listen [::]:80;    server_name  localhost;    location &#x2F; &#123;        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;        index  index.html index.htm index.php;    &#125;    error_page   500 502 503 504  &#x2F;50x.html;    location &#x3D; &#x2F;50x.html &#123;        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;    &#125;    location ~ \.php$ &#123;        root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;        fastcgi_pass   php:9000;        fastcgi_index  index.php;        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;        include        fastcgi_params;    &#125;&#125;</code></pre></div><p>关联宿主机目录并启动 php</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> run --rm -d <span class="token punctuation">\</span>--name myphp <span class="token punctuation">\</span>-v <span class="token string">"<span class="token environment constant">$PWD</span>"</span>/www:/usr/share/nginx/html <span class="token punctuation">\</span>--network my_net --network-alias php <span class="token punctuation">\</span>php:7.4-fpm</code></pre></div><p>关联宿主机目录并启动 nginx</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">docker</span> run --rm -d <span class="token punctuation">\</span>--name mynginx <span class="token punctuation">\</span>--network my_net --network-alias nginx <span class="token punctuation">\</span>-v <span class="token string">"<span class="token environment constant">$PWD</span>"</span>/www:/usr/share/nginx/html <span class="token punctuation">\</span>-v <span class="token string">"<span class="token environment constant">$PWD</span>"</span>/nginx/conf.d:/etc/nginx/conf.d <span class="token punctuation">\</span>-p <span class="token number">8080</span>:80 <span class="token punctuation">\</span>nginx</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>Docker</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阿里云Composer全量镜像</title>
    <link href="/posts/76cfd9f2.html"/>
    <url>/posts/76cfd9f2.html</url>
    
    <content type="html"><![CDATA[<p>由于默认情况下执行 composer 各种命令是去国外的 composer 官方镜像源获取需要安装的具体软件信息，所以在不使用代理、不翻墙的情况下，从国内访问国外服务器的速度相对比较慢</p><p>使用阿里巴巴提供的 Composer 全量镜像 <a href="https://mirrors.aliyun.com/composer/">mirrors.aliyun.com&#x2F;composer&#x2F;</a></p><h3 id="全局配置（推荐）"><a href="#全局配置（推荐）" class="headerlink" title="全局配置（推荐）"></a>全局配置（推荐）</h3><p>所有项目都会使用该镜像地址：</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">composer config -g repo.packagist composer https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;composer&#x2F;</code></pre></div><p>取消配置：</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">composer config -g --unset repos.packagist</code></pre></div><h3 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h3><p>仅修改当前工程配置，仅当前工程可使用该镜像地址：</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">composer config repo.packagist composer https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;composer&#x2F;</code></pre></div><p>取消配置：</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">composer config --unset repos.packagist</code></pre></div><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>composer 命令增加 -vvv 可输出详细的信息，命令如下:</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">composer -vvv require alibabacloud&#x2F;sdk</code></pre></div><h3 id="遇到问题？"><a href="#遇到问题？" class="headerlink" title="遇到问题？"></a>遇到问题？</h3><ol><li>建议先将 Composer 版本升级到最新：</li></ol><div class="code-wrapper"><pre class="language-none"><code class="language-none">composer self-update</code></pre></div><ol start="2"><li>执行诊断命令：</li></ol><div class="code-wrapper"><pre class="language-none"><code class="language-none">composer diagnose</code></pre></div><ol start="3"><li>清除缓存：</li></ol><div class="code-wrapper"><pre class="language-none"><code class="language-none">composer clear</code></pre></div><ol start="4"><li>若项目之前已通过其他源安装，则需要更新 composer.lock 文件，执行命令：</li></ol><div class="code-wrapper"><pre class="language-none"><code class="language-none">composer update --lock</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>Composer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建 Vue 环境遇到的问题</title>
    <link href="/posts/f9eb3fcd.html"/>
    <url>/posts/f9eb3fcd.html</url>
    
    <content type="html"><![CDATA[<h2 id="常用-npm-命令"><a href="#常用-npm-命令" class="headerlink" title="常用 npm 命令"></a>常用 npm 命令</h2><p>全局安装命令</p><blockquote><p>npm install -g packgeName</p></blockquote><p>全局卸载命令</p><blockquote><p>npm uninstall -g packgeName</p></blockquote><p>在使用node的时候，用 npm 安装了很多软件，过一段时间没有使用就会忘记，怎么查看自己全局安装过的包，用命令</p><blockquote><p>npm list -g –depth 0</p></blockquote><p>-g: 全局的安装包</p><p>list：已安装的 node 包</p><p>–depth 0：</p><h2 id="安装-vue-cli"><a href="#安装-vue-cli" class="headerlink" title="安装 vue-cli"></a>安装 vue-cli</h2><div class="code-wrapper"><pre class="language-powershell" data-language="powershell"><code class="language-powershell">npm install <span class="token operator">-</span>g vue-<span class="token function">cli</span></code></pre></div><blockquote><p>PS D:\WorkSpace\VueProject&gt; npm install -g vue-cli<br>npm WARN deprecated <a href="mailto:&#x76;&#117;&#101;&#x2d;&#99;&#x6c;&#105;&#64;&#50;&#x2e;&#x39;&#46;&#54;">&#x76;&#117;&#101;&#x2d;&#99;&#x6c;&#105;&#64;&#50;&#x2e;&#x39;&#46;&#54;</a>: This package has been deprecated in favour of @vue&#x2F;cli<br>npm WARN deprecated <a href="mailto:&#114;&#x65;&#x71;&#x75;&#x65;&#x73;&#x74;&#64;&#x32;&#46;&#x38;&#56;&#x2e;&#50;">&#114;&#x65;&#x71;&#x75;&#x65;&#x73;&#x74;&#64;&#x32;&#46;&#x38;&#56;&#x2e;&#50;</a>: request has been deprecated, see <a href="https://github.com/request/request/issues/3142">https://github.com/request/request/issues/3142</a><br>npm WARN deprecated <a href="mailto:&#x63;&#x6f;&#x66;&#102;&#101;&#101;&#x2d;&#x73;&#99;&#x72;&#105;&#x70;&#116;&#x40;&#x31;&#46;&#49;&#50;&#46;&#55;">&#x63;&#x6f;&#x66;&#102;&#101;&#101;&#x2d;&#x73;&#99;&#x72;&#105;&#x70;&#116;&#x40;&#x31;&#46;&#49;&#50;&#46;&#55;</a>: CoffeeScript on NPM has moved to<br>“coffeescript” (no hyphen)<br>C:\Users\Administrator\AppData\Roaming\npm\vue-init -&gt; C:\Users\Administrator\AppData\Roaming\npm\node_modules\vue-cli\bin\vue-init<br>C:\Users\Administrator\AppData\Roaming\npm\vue -&gt; C:\Users\Administrator\AppData\Roaming\npm\node_modules\vue-cli\bin\vue<br>C:\Users\Administrator\AppData\Roaming\npm\vue-list -&gt; C:\Users\Administrator\AppData\Roaming\npm\node_modules\vue-cli\bin\vue-list</p><ul><li><a href="mailto:&#x76;&#117;&#x65;&#x2d;&#99;&#108;&#105;&#64;&#x32;&#46;&#57;&#x2e;&#x36;">&#x76;&#117;&#x65;&#x2d;&#99;&#108;&#105;&#64;&#x32;&#46;&#57;&#x2e;&#x36;</a><br>added 238 packages from 205 contributors in 57.591s</li></ul></blockquote><p>运行 <code>vue</code> 测试 vue 命令</p><blockquote><p>PS D:\WorkSpace\VueProject&gt; vue<br>vue : 无法加载文件 C:\Users\Administrator\AppData\Roaming\npm\vue.ps1，因<br>为在此系统上禁止运行脚本。有关详细信息，请参阅 https:&#x2F;go.microsoft.com&#x2F;fwl<br>ink&#x2F;?LinkID&#x3D;135170 中的 about_Execution_Policies。<br>所在位置 行:1 字符: 1</p><ul><li>vue</li><li>CategoryInfo          : SecurityError: (:) []，PSSecurityException   </li><li>FullyQualifiedErrorId : UnauthorizedAccess</li></ul></blockquote><h2 id="解决PowerShell-脚本执行策略的问题"><a href="#解决PowerShell-脚本执行策略的问题" class="headerlink" title="解决PowerShell 脚本执行策略的问题"></a>解决PowerShell 脚本执行策略的问题</h2><p>Powershell 默认是不允许执行 PS1 脚本的，这就需要我们自己使用 <code>Set-ExecutionPolicy</code> 来修改默认策略。默认</p><ol><li>以管理员身份运行PowerShell</li><li>执行： <code>Get-ExecutionPolicy</code> 可以获取当前的策略。默认是 <code>Restricted</code>，表示状态是禁止的</li><li>执行： <code>set-ExecutionPolicy RemoteSigned</code></li><li>选择Y</li></ol><p class="note note-primary">    这里简单的说下六种策略的区别</p><ul><li>Restricted.<br>不读取任何配置文件、不运行任何脚本，这个是默认策略。</li><li>AllSigned.<br>所有的脚本和配置文件必须有受信任的的发布者的签名，就算是自己写的脚本也同样如此，否则无法执行。</li><li>RemoteSigned.<br>和上面的类似，但是针对的是从网上下载下来的脚本，这些脚本同样也需要可信的签名。</li><li>Unrestricted.<br>可以运行脚本或者读取配置文件，如果执行的是从网上下载的脚本，那么会有一个申请权限的提示。</li><li>Bypass.<br>不阻止任何脚本或配置文件，也不会显示警告或者提示。</li><li>Undefined.<br>把当前 scope 的所有策略全部都删除，但是不会删除 Group Policy scope 中的策略。如果你想删除某个设置好的策略，用这个就行了。</li></ul><p>上面说到了 scope，这个可以理解为作用域，针对不同的作用域设置不同的策略。<br>主要有三种 scope：</p><ul><li>process<br>设置的策略只影响当前的 powershell 进程。</li><li>CurrentUser:<br>设置的策略只影响当前用户。</li><li>LocalMachine:<br>设置的策略影响这台计算机上的所有用户。</li></ul><p>那么设置方法就是使用<code>Set-ExecutionPolicy</code>命令，具体格式如下：</p><blockquote><p>Set-ExecutionPolicy [-ExecutionPolicy] <ExecutionPolicy> [[-Scope] <ExecutionPolicyScope> ] [-Force] [-Confirm] [-WhatIf] [ <CommonParameters>]</p></blockquote><ul><li>-Force 的作用是禁止所有的提示输出，当你更改执行策略的时候，默认情况下是会显示警告的，这个选项可以让他不显示警告。</li><li>-Confirm 会在你执行这个 cmdlet 之前再确认一次，以免打错命令。</li><li>-WhatIf 会显示执行完这条 cmdlet 之后会发生什么事情，但是并不执行当前的 cmdlet。</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>npm</tag>
      
      <tag>PowerShell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo渲染跳过.html或者.md</title>
    <link href="/posts/1ed1093e.html"/>
    <url>/posts/1ed1093e.html</url>
    
    <content type="html"><![CDATA[<h1 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h1><p>在 Google Search Console 验证站长权限的时候，通常都会要求在主目录下添加一个 html 文件。按要求是直接放到<code>/public/</code>文件夹里。但是每次运行<code>hexo clean</code>进行清除或者<code>hexo g</code>生成静态页面的时候。该文件就会受到影响要重新放进去。这么做有点麻烦。我问Google老师应该怎么办。老师答案是放source 文件夹下。可是当运行<code>hexo g</code>重新生成静态页面时，这个文件被渲染成hexo主题的布局。最终找到了解决的办法，记录一下以供后人参考。</p><h1 id="不渲染-html-文件"><a href="#不渲染-html-文件" class="headerlink" title="不渲染 html 文件"></a>不渲染 html 文件</h1><p>在不想被渲染的 html 文件最上面添加如下代码：</p><div class="code-wrapper"><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span><span class="token punctuation">---</span></span></code></pre></div><p>问题解决了，但是比如很多时候我们想要写一个 README.md 或者一些自定义的页面改怎么办呢？</p><h1 id="不渲染-md-文件"><a href="#不渲染-md-文件" class="headerlink" title="不渲染 md 文件"></a>不渲染 md 文件</h1><p>如果想保留原 md 文件后缀，这就需要在 站点配置文件<code>_config.yml</code>中配置，找到 <code>skip_render </code>参数，开始匹配的位置是基于你的<code>source_dir</code>的，一般来说就是你的 source 文件夹下。下面我分别列举几种常见的情况进行说明：</p><div class="code-wrapper"><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> test/*  <span class="token comment"># 单个文件夹下全部文件</span><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> test/<span class="token important">*.md</span>  <span class="token comment"># 单个文件夹下指定类型文件</span><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> test/<span class="token important">**</span>  <span class="token comment"># 单个文件夹下全部文件以及子目录</span></code></pre></div><p>多个文件夹以及各种复杂情况：</p><div class="code-wrapper"><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> README.md  <span class="token punctuation">-</span> `test1/<span class="token important">*.html`</span>  <span class="token punctuation">-</span> `test2/<span class="token important">**`</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>seo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHPStorm2020最新激活码</title>
    <link href="/posts/96abdf0e.html"/>
    <url>/posts/96abdf0e.html</url>
    
    <content type="html"><![CDATA[<p><del>2020年激活码，会不定期的更新</del></p><p>以下激活码已失效</p><p>4月14日</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">JVCH4PWQRE-eyJsaWNlbnNlSWQiOiJKVkNINFBXUVJFIiwibGljZW5zZWVOYW1lIjoi5bGx5Lic55CG5bel5aSn5a2mIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlNDIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0YiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1YiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQREIiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFdTIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUFMiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiRFAiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiRFBBIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4IiwiZXh0ZW5kZWQiOnRydWV9XSwibWV0YWRhdGEiOiIwMTIwMjAwMzI2TFBBQTAwNTAwOCIsImhhc2giOiIxNjc5MTc1OC8wOjgxMTg5MDg2NSIsImdyYWNlUGVyaW9kRGF5cyI6NywiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ&#x3D;&#x3D;-LbeC0&#x2F;0bH1qW5+CJNm8m&#x2F;jGbUS9h3caTLqYVS0b+nTOm7PTDze&#x2F;sJlJW&#x2F;Vt3T9fKPmtmnG6ag+eKokeS0D5ONZfRYmTTlxycfUmEmTOye1txzaQ53qU9+Td6OR&#x2F;nBChgpvjaqDZNEePVnwdTmNdlNa3OMT7FzuDJw4ubrnIID0eLUv46Y9QMcp1rxvIIQ4gkOi9X7Da+txwIL&#x2F;&#x2F;Mit+BXExcAvwf1kwLnL4EVm7&#x2F;tITa&#x2F;qJUncpLKqY6LFkSkKtkYe+850yooDACPouWN&#x2F;bcbPMvhsQbgL3JAEBERcLxU7jjAMkyygxB0CLtuM5T9jeZk&#x2F;JdaNffMRt9hbkSd9wwhg&#x3D;&#x3D;-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO&#x2F;5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij&#x2F;78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB&#x2F;xVy&#x2F;VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE&#x2F;EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl&#x2F;GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn&#x2F;72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN&#x2F;lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D&#x2F;cXmgpOyW&#x2F;1SmBz3XjVIi&#x2F;zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV&#x2F;bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit&#x2F;pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow&#x3D;&#x3D;</code></pre></div><p>4月23号</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">Z4ZSP0F8FF-eyJsaWNlbnNlSWQiOiJaNFpTUDBGOEZGIiwibGljZW5zZWVOYW1lIjoi5rC45LmF5r+A5rS7IGlkZWEubWVkZW1pbmcuY29tIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IiIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlNDIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0YiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1YiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMC0wNS0yMiIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMC0wNS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQREIiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFdTIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsInBhaWRVcFRvIjoiMjAyMC0wNS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUFMiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsInBhaWRVcFRvIjoiMjAyMC0wNS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiRFAiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiRFBBIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9XSwibWV0YWRhdGEiOiIwMTIwMjAwNDIzUFBBTTAwMDAwNSIsImhhc2giOiIxNzc0Mzc0NC8wOi0yMTI0OTkyNzQ5IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-HrnYQ9EDqNdNoAVOYpdOl0Tq&#x2F;9hf1d6qcWb2kNFTV+Yo7WLrHh8qYN8DMInZnJqLBXqIUeSEMSVDv8fcWU3yHrtnRACz+7BFyVEoYOi6lcgPOROcwGTgpGk8IGww6EE+lTcFaod249TXxc0eoVSUAQWa5NNq35PJ&#x2F;lYQSFhzWCkKs7NRTdBFirB9zRYfnFdLPNd2I4N2k4doAZiqYT4weMcouBuD9QfGDpwyET2gF7f1lTzdILEthHBe&#x2F;EQukmus8fZh&#x2F;adYpFpKhvnAuTwHd9jVaDw&#x2F;H3QFI1rlQMeGN51uXRPwyVNuqldKbPTU5lXJNWn2WhiauXz4Ja0ih7HBWA&#x3D;&#x3D;-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO&#x2F;5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij&#x2F;78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB&#x2F;xVy&#x2F;VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE&#x2F;EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl&#x2F;GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn&#x2F;72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN&#x2F;lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D&#x2F;cXmgpOyW&#x2F;1SmBz3XjVIi&#x2F;zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV&#x2F;bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit&#x2F;pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow&#x3D;&#x3D;</code></pre></div><p>最新的免费使用 Jetbrains 系列产品的方法参见 zhile 大佬的分享:</p><p>Jetbrains 系列产品重置试用方法 <a href="https://zhile.io/2020/11/18/jetbrains-eval-reset-da33a93d.html">https://zhile.io/2020/11/18/jetbrains-eval-reset-da33a93d.html</a></p>]]></content>
    
    
    <categories>
      
      <category>Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>激活</tag>
      
      <tag>PhPStorm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos7 安装 Lumen</title>
    <link href="/posts/e81d76c7.html"/>
    <url>/posts/e81d76c7.html</url>
    
    <content type="html"><![CDATA[<h2 id="Composer-安装Lumen"><a href="#Composer-安装Lumen" class="headerlink" title="Composer 安装Lumen"></a>Composer 安装Lumen</h2><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">composer</span> create-project laravel/lumen blog</code></pre></div><h2 id="安装Lumen遇到的问题-amp-解决"><a href="#安装Lumen遇到的问题-amp-解决" class="headerlink" title="安装Lumen遇到的问题&amp;解决"></a>安装Lumen遇到的问题&amp;解决</h2><p>报错1</p><blockquote><p>PHP Warning:  putenv() has been disabled for security reasons in phar:&#x2F;&#x2F;&#x2F;usr&#x2F;bin&#x2F;composer&#x2F;vendor&#x2F;composer&#x2F;xdebug-handler&#x2F;src&#x2F;Process.php on line 149</p></blockquote><p>原因：<code>putenv()</code>函数被限制（disabled）；</p><p>方案：找到PHP配置文件将禁用的函数移除。</p><p>报错2</p><blockquote><p> [ErrorException]<br> pcntl_signal() has been disabled for security reasons</p></blockquote><p>方案：处理方法同报错1。</p><p>报错3</p><blockquote><p> [ErrorException]<br> pcntl_signal() has been disabled for security reasons</p></blockquote><p>方案：处理方法同报错1。</p>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>Centos</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gitee和github同时配置ssh key</title>
    <link href="/posts/a323c34b.html"/>
    <url>/posts/a323c34b.html</url>
    
    <content type="html"><![CDATA[<p>由于国内的 GitHub 访问比较不稳定有时候会选择 Gitee 作为 GitHub 的备用方案。再有，国内有些开源项目只有在 Gitee 发布。所以做个备用方案是很有必要的。一下是整个配置</p><h2 id="创建Gitee和Github的ssh-key"><a href="#创建Gitee和Github的ssh-key" class="headerlink" title="创建Gitee和Github的ssh key"></a>创建Gitee和Github的ssh key</h2><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/.sshssh-keygen -t rsa -C <span class="token string">"xxxxx@xxxxx.com"</span></code></pre></div><p> 替换正确的邮箱，按 enter</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">Generating public/private rsa key pair.Enter <span class="token function">file</span> <span class="token keyword">in</span> <span class="token function">which</span> to save the key <span class="token punctuation">(</span>/c/Users/FlyingHorse/.ssh/id_rsa<span class="token punctuation">)</span>: id_rsa.gitee</code></pre></div><p>创建 Gitee 的 ssh key 时输入 id_rsa.gitee，创建 github 的 ssh key 时输入 id_rsa.github</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">Enter passphrase <span class="token punctuation">(</span>empty <span class="token keyword">for</span> no passphrase<span class="token punctuation">)</span>:Enter same passphrase again:Your identification has been saved <span class="token keyword">in</span> id_rsa.gitee.Your public key has been saved <span class="token keyword">in</span> id_rsa.gitee.pub.The key fingerprint is:SHA256:lmjU8A4k+r6liYJmENBPM/7Frx3XDg98VeWvIQ9dLyw xxxxx@xxxxx.comThe key's randomart image is:+---<span class="token punctuation">[</span>RSA <span class="token number">2048</span><span class="token punctuation">]</span>----+<span class="token operator">|</span> <span class="token builtin class-name">.</span>  <span class="token builtin class-name">.</span> o         o<span class="token operator">|</span><span class="token operator">|</span><span class="token builtin class-name">.</span> <span class="token punctuation">..</span>+o +       <span class="token punctuation">..</span><span class="token operator">|</span><span class="token operator">|</span><span class="token builtin class-name">.</span> .+ oo.o       +<span class="token operator">|</span><span class="token operator">|</span><span class="token builtin class-name">.</span>  .o. +o.   o .+<span class="token operator">|</span><span class="token operator">|</span> <span class="token builtin class-name">.</span>  <span class="token punctuation">..</span>o.S. .E.<span class="token operator">=</span>.o<span class="token operator">|</span><span class="token operator">|</span><span class="token builtin class-name">.</span>  <span class="token builtin class-name">.</span> <span class="token punctuation">..</span>.  o <span class="token operator">==</span>o+ <span class="token operator">|</span><span class="token operator">|</span>o   <span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span>  o o *o  <span class="token operator">|</span><span class="token operator">|</span>oo <span class="token builtin class-name">.</span> <span class="token operator">=</span>  <span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span>   o  <span class="token operator">|</span><span class="token operator">|</span>o<span class="token punctuation">..</span> +            <span class="token operator">|</span>+----<span class="token punctuation">[</span>SHA256<span class="token punctuation">]</span>-----+</code></pre></div><p>一路按 enter，直到输出如上所示</p><h2 id="把-public-key-复制到-gitee-或-github"><a href="#把-public-key-复制到-gitee-或-github" class="headerlink" title="把 public key 复制到 gitee 或 github"></a>把 public key 复制到 gitee 或 github</h2><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> id_rsa.gitee.pubssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDZbvgUEj3XAXH4HkW27ibdXgV6VHdrA9/WdSDHtiiC55mjPvxj3OtPxIbpeJmhWyHiJWR6uUuK+gkb//O51uWCPhHqxKR7+45tZ9jHqXW+hEKPp+odQgc+3hiHAjTkn3JGeIJlQp2UdJCDHBrp+kcgVeg91+y7cU3ufaUQ/hpDrCgn6uvwjwJgnDhV9DYi+gFUFe7LUwa1o4nfwg43ycuOOuT7c6VO2dj/0pLRUVTPQYu/C3kaaPVedir7mKIu/dM6Ec44bhYTp1Dqqp8BO42Cfo+n+dempqYTe2wcPvuDjSj884IATc/KvBfc86Yd2Uj7NI7li90Y3i6adoxUIWQh xxxxx@xxxxx.com</code></pre></div><p>查看公钥，Gitee 输入 id_rsa.gitee.pub，Github 输入 id_rsa.github.pub</p><p>将第二行到结尾的内容复制到 Gitee或 Github 的 ssh 中保存</p><h2 id="创建配置文件解决-ssh-冲突"><a href="#创建配置文件解决-ssh-冲突" class="headerlink" title="创建配置文件解决 ssh 冲突"></a>创建配置文件解决 ssh 冲突</h2><p>在 .ssh 文件夹中创建 config 文件，添加以下内容以区分两个 ssh key</p><div class="code-wrapper"><pre class="language-basic" data-language="basic"><code class="language-basic"># giteeHost gitee.<span class="token keyword">com</span>HostName gitee.<span class="token keyword">com</span>PreferredAuthentications publickeyIdentityFile ~<span class="token operator">/</span>.ssh<span class="token operator">/</span>id_rsa.gitee# githubHost github.<span class="token keyword">com</span>HostName github.<span class="token keyword">com</span>PreferredAuthentications publickeyIdentityFile ~<span class="token operator">/</span>.ssh<span class="token operator">/</span>id_rsa.github</code></pre></div><h2 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h2><p>输入</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -T git@gitee.com</code></pre></div><p>若返回如下结果，则Gitee则连接正常</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">Welcome to Gitee.com, yourname<span class="token operator">!</span></code></pre></div><p> 输入</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com</code></pre></div><p>若返回如结果，则 github 则连接正常</p><div class="code-wrapper"><pre class="language-bash" data-language="bash"><code class="language-bash">Hi yourname<span class="token operator">!</span> You've successfully authenticated, but GitHub does not provide shell access.</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VsCode中使用Emmet神器快速编写HTML代码</title>
    <link href="/posts/deb4d94c.html"/>
    <url>/posts/deb4d94c.html</url>
    
    <content type="html"><![CDATA[<h2 id="Emmet简述"><a href="#Emmet简述" class="headerlink" title="Emmet简述"></a>Emmet简述</h2><p>Emmet (前身为 Zen Coding) 是一个能大幅度提高前端开发效率的一个工具. 在前端开发的过程中，一大部分的工作是写 HTML、CSS 代码。特别是手动编写 HTML 代码的时候，效率会特别低下，因为需要敲打很多尖括号，而且很多标签都需要闭合标签等。于是，就有了 Emmet，它可以极大的提高代码编写的效率，它提供了一种非常简练的语法规则，然后立刻生成对应的 HTML 结构或者 CSS 代码，同时还有多种实用的功能帮助进行前端开发。<br>VsCode 内置了Emmet语法,在后缀为 <code>.html</code>&#x2F;<code>.css中</code> 输入缩写后按 <code>Tab</code> 键即会自动生成相应代码</p><blockquote><p>请注意在VsCode新版本中按Tab不再默认启用Emmet展开缩写!需要在首选项配置中将<code>emmet.triggerExpansionOnTab</code>设置为<code>true</code>值!</p></blockquote><p><strong>语法基本规则如下:</strong></p><div class="code-wrapper"><pre class="language-none"><code class="language-none">E 代表HTML标签。E#id 代表id属性。E.class 代表class属性。E[attr&#x3D;foo] 代表某一个特定属性。E&#123;foo&#125; 代表标签包含的内容是foo。E&gt;N 代表N是E的子元素。E+N 代表N是E的同级元素。E^N 代表N是E的上级元素。</code></pre></div><blockquote><p>本文仅介绍了在Html使用Emmet,<br>如果想Css缩写的语法请参考<a href="https://docs.emmet.io/">Emmet Documentation</a></p></blockquote><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><ul><li><strong>元素(Elements)</strong><br>您可以使用元素的名称，如div或p来生成HTML标签。Emmet没有一组可用的标签名称，可以写任何单词并将其转换为标签。也就是只要知道元素的缩写,Emmet会自动转换成对应标签，形如:</li></ul><div class="code-wrapper"><pre class="language-none"><code class="language-none">div &#x3D;&gt; &lt;div&gt; &lt;&#x2F;div&gt;foo &#x3D;&gt; &lt;foo&gt; &lt;&#x2F;foo&gt;html:5 &#x3D;&gt; 将生成html5标准的包含body为空基本domhtml:xt &#x3D;&gt; 生成XHTML过渡文档类型,DOCTYPE为XHTMLhtml:4s &#x3D;&gt; 生成HTML4严格文档类型,DOCTYPE为HTML 4.01a:mail          &#x3D;&gt; &lt;a href&#x3D;&quot;mailto:&quot;&gt;&lt;&#x2F;a&gt;a:link          &#x3D;&gt; &lt;a href&#x3D;&quot;http:&#x2F;&#x2F;&quot;&gt;&lt;&#x2F;a&gt;base            &#x3D;&gt; &lt;base href&#x3D;&quot;&quot;&gt;br              &#x3D;&gt; &lt;br&gt;link            &#x3D;&gt; &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&quot;&gt;script:src      &#x3D;&gt; &lt;script src&#x3D;&quot;&quot;&gt;&lt;&#x2F;script&gt;form:get        &#x3D;&gt; &lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;get&quot;&gt;&lt;&#x2F;form&gt;label           &#x3D;&gt; &lt;label for&#x3D;&quot;&quot;&gt;&lt;&#x2F;label&gt;input           &#x3D;&gt; &lt;input type&#x3D;&quot;text&quot;&gt;inp             &#x3D;&gt; &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;&quot; id&#x3D;&quot;&quot;&gt;input:hidden    &#x3D;&gt; &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;&quot;&gt; input:h亦可input:email     &#x3D;&gt; &lt;input type&#x3D;&quot;email&quot; name&#x3D;&quot;&quot; id&#x3D;&quot;&quot;&gt;input:password  &#x3D;&gt; &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;&quot; id&#x3D;&quot;&quot;&gt;input:checkbox  &#x3D;&gt; &lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;&quot; id&#x3D;&quot;&quot;&gt;input:radio     &#x3D;&gt; &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;&quot; id&#x3D;&quot;&quot;&gt;select          &#x3D;&gt; &lt;select name&#x3D;&quot;&quot; id&#x3D;&quot;&quot;&gt;&lt;&#x2F;select&gt;option          &#x3D;&gt; &lt;option value&#x3D;&quot;&quot;&gt;&lt;&#x2F;option&gt;bq              &#x3D;&gt; &lt;blockquote&gt;&lt;&#x2F;blockquote&gt;btn             &#x3D;&gt; &lt;button&gt;&lt;&#x2F;button&gt;btn:s           &#x3D;&gt; &lt;button type&#x3D;&quot;submit&quot;&gt;&lt;&#x2F;button&gt;btn:r           &#x3D;&gt; &lt;button type&#x3D;&quot;reset&quot;&gt;&lt;&#x2F;button&gt;</code></pre></div><ul><li><strong>文本操作符(Text)</strong><br>如果想在生成元素的同时添加文本内容可以使用{}</li></ul><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">div&#123;这是一段文本&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>这是一段文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>a&#123;点我点我&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点我点我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  </code></pre></div><ul><li><p>属性操作符(Attribute operators)</p><p>属性运算符用于修改输出元素的属性.</p><ul><li>Id和Class (elem#id and elem.class )</li></ul><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">div.test  => <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>div#pageId => <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pageId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre></div><p>隐式标签则会自动联想生成对应元素,根据配置规则不同生成的结果也是不同的.</p><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">.class=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>em>.class=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>table>.row>.col=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre></div><p>绑定多个类名用.符号连续起来即可</p><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">div.test1.test2.test3=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test1 test2 test3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre></div><ul><li>自定义属性使用 [attr1&#x3D;’’ attr2&#x3D;’’]</li></ul><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">a[href='#' data-title='customer' target='_blank']=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">data-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>customer<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre></div></li><li><p>嵌套操作符(Nesting operators)</p><p>嵌套操作符用于将缩写元素放置在生成的树中,是否应放置在上下文元素的内部或附近.</p><ul><li>子级:&gt;<br>通过&gt;标识元素可以生成嵌套子级元素,可以配合元素属性进行连写<br><code>div#pageId&gt;ul&gt;li =&gt; &lt;div id=&quot;pageId&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;</code></li><li>同级:+<br>+字符表示生成兄弟级元素.<br><code>div#pageId+div.child =&gt; &lt;div id=&quot;pageId&quot;&gt;&lt;/div&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt;</code></li><li>父级:^<br>^用于生成父级元素的同级元素,从这个^字符所在位置开始,查找左侧最近的元素的父级元素并生成其兄弟级元素.<br><code>div&gt;p.parent&gt;span.child^ul.brother&gt;li =&gt; &lt;div&gt; &lt;p class=&quot;parent&quot;&gt;&lt;span class=&quot;child&quot;&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul class=&quot;brother&quot;&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;</code></li></ul></li><li><p><strong>分组操作符(Grouping)</strong><br>分组使用()来实现缩写的分离.比如这个例子,如果不加括号那么a将作为span的子级元素生成.加上括号a将于()内的元素同级.</p></li></ul><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">div>(ul>li+span)>a=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre></div><ul><li><strong>乘法(Multiplication)</strong><br>使用<em>N即可自动生成重复项.N是一个正整数.在使用时请注意</em>N所在位置,位置不同生成的结果不同.</li></ul><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">ul>li*3=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre></div><ul><li><strong>自动计数(numbering)</strong><br>这个功能挺方便的对于生成重复项时增加一个序号,只需要加上$符号即可.</li></ul><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">ul>li.item$&#123;item number:$&#125;*3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>item number:1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>item number:2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>item number:3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre></div><p>如果生成两位数则使用两个连续的$$,更多位数以此类推…<br>使用@修饰符，可以更改编号方向（升序或降序）和基数（例如起始值）.注意这个操作符在$之后添加<br>@-表示降序,@+表示升序,默认使用升序.<br>@N可以改变起始值.需要注意的是如果配合升降序使用的话N是放到+-符后.</p><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">ul>li.item$@-*3=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>---------------------------ul>li.item$@-10*3=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item11<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre></div><p>上述的操作是可以搭配使用进而得出酷炫的效果,使用时请注意空格的问题,缩写代码不要有空格否则是不会进行转换的.<br>另外如果你的编辑器中已经有了一些html智能提示代码段,比如我的VsCode还装了HTML Snippets插件,这个与Emmet语法有部分冲突,使用Tab键时会优先使用插件的代码提示,建议禁用.<br>组合起来看看效果:</p><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">table.table-row[role='table']>(thead>tr>td&#123;item $@120&#125;*5)+(tbody>tr>(td.item$$@-)lorem10*5)</code></pre></div><p>这段目的在于生成一个类名为table-row,且自定义了属性role的table标签,内部包含了thead与tbody,分别生成5个td.<br>thead中td的内容是item加上自增序号,自增序号基数从120开始.<br>tbody中td拥有一个名为item加降序自增符号类名,且每个td内容随机填充10个单词.</p><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-row<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>item 120<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>item 121<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>item 122<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>item 123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>item 124<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item05<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odit, assumenda.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item04<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Magnam possimus molestias ipsum animi rem placeat, ut obcaecati laudantium.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item03<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Consequuntur, labore ad optio cupiditate iusto dolores fugit quidem officiis.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item02<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Veniam, explicabo consequuntur blanditiis at dicta fuga ratione eos beatae.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item01<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fuga voluptatum illo quis ducimus ad eveniet non. Saepe, eveniet.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre></div><p>再来个配合嵌套元素和计数的大栗子.</p><div class="code-wrapper"><pre class="language-none"><code class="language-none">div.nav&gt;(nav#navbar&gt;(ul&gt;li&gt;(a[href&#x3D;&quot;&#x2F;xxx&#x2F;product&#x2F;$&quot; data-index&#x3D;$]&gt;lorem4)*5))+div.btn[type&#x3D;&#39;button&#39;]&gt;span&#123;--&#125;^^div#main</code></pre></div><p>这个有点复杂,看下效果:</p><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/xxx/product/1<span class="token punctuation">"</span></span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Lorem ipsum dolor sit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/xxx/product/2<span class="token punctuation">"</span></span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Dolor vel, quia quas.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/xxx/product/3<span class="token punctuation">"</span></span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Qui hic, corrupti eum!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/xxx/product/4<span class="token punctuation">"</span></span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Necessitatibus perspiciatis, corrupti. Praesentium!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/xxx/product/5<span class="token punctuation">"</span></span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Nostrum quos, voluptate. Velit!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>--<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre></div><h2 id="进阶高级用法"><a href="#进阶高级用法" class="headerlink" title="进阶高级用法"></a>进阶高级用法</h2><ul><li><strong>模拟文本&#x2F;随机文本</strong><br>在开发时经常要填充一些文本内容占位,Emmet内置了Lorem Ipsum功能来实现.loremN或者lipsumN,N表示生成的单词数,正整数.可以不填.</li></ul><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">lorem=> Lorem ipsum dolor sit amet, consectetur adipisicing elit. Suscipit quia commodi vero sint omnis fugiat excepturi reiciendis necessitatibus totam asperiores, delectus saepe nulla consequuntur nostrum! Saepe suscipit recusandae repellendus assumenda.p>lorem4=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Lorem ipsum dolor sit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>(p>lorem4)*3=><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Lorem ipsum dolor sit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Labore aperiam, consequuntur architecto.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Quidem nisi, cum odio!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre></div><ul><li><strong>包装文本</strong><br>听起来可能有点绕,通俗点解释就是把一段指定的文本包装成我们想要的结构.注意这个功能需要编辑器的支持,举个大栗子:<br>比如PM给了这样一段文本</li></ul><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">首页产品介绍相关案例关于我们联系我们而我们预期的效果是这样<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>产品介绍<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>相关案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>关于我们<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>联系我们<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span></code></pre></div><ol><li><p>选中文本,按下<code>ctrl+shift+p</code>打开命令窗口输入ewrap</p></li><li><p>选择<code>Emmet:使用缩写进行包装(Wrap with Abbreviation)</code>选项<br><img src="https://i.loli.net/2020/04/22/GlhYIzDufBcUCME.png" alt="img"></p></li><li><p>输入缩写字符<code>nav&gt;ul&gt;li*</code>按下回车键即可看到效果.<br>当然也可以在菜单&#x3D;&gt;编辑&#x3D;&gt;Emmet(M)..然后输入.</p><blockquote><p>这里需要的注意的地方是输入的缩写代码中*所在位置不同得到的效果也是不同的.</p></blockquote></li></ol><p>另外如果给的文本带有序号的情况,我们也是可以通过缩写来处理,而不是手动删除,主要用的是<code>|t</code>来处理.<br>比如:</p><div class="code-wrapper"><pre class="language-markup" data-language="markup"><code class="language-markup">1.首页2.产品介绍3.相关案例4.关于我们5.联系我们输入包装字符命令nav>ul>li*|t即可看到生成的html中自动去掉了序号</code></pre></div><p>针对上边说的几种情况来演示一下.<br><img src="https://i.loli.net/2020/04/22/PebdWoAOBn5YNlf.gif" alt="img"><br>利用好Emmet来快速编写html代码,能提升工作效率不用在一个个敲闭合标签,简直是我等偷懒党神器.赶快去耍耍吧。</p>]]></content>
    
    
    <categories>
      
      <category>技术笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VsCode</tag>
      
      <tag>Emmet</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/4a17b156.html"/>
    <url>/posts/4a17b156.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://geehon.gitee.io/">GeeHon</a>! This is my very first post. Check <a href="https://geehon.gitee.io/about/">About</a> for more info. you can ask me on <a href="https://github.com/geehon">GitHub</a>.</p><p>This is the first piece of code I learned and impressed me. Haha！</p><div class="code-wrapper"><pre class="language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"hello world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div><blockquote><p>hello world!</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>闲言碎语</category>
      
    </categories>
    
    
    <tags>
      
      <tag>About</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
